 class Program
    {
        static void Main(string[] args)
        {
            
            yunsuan t = new yunsuan();
             Console.WriteLine("输入第一个数：");
            t.A = Convert.ToInt16(Console.ReadLine());
             Console.WriteLine("输入计算符号：");
            t.C = (Console.ReadLine());
             Console.WriteLine("输入第二个数：");
            t.B = Convert.ToInt16(Console.ReadLine());
            if (t.Equals(t.A, t.B) == true)
                Console.WriteLine("两个数相等");
            else
                Console.WriteLine("两个数不相等");          
                if (t.C == "+")
                    Console.WriteLine("结果为：{0}", t.jia(t.A, t.B));
                if (t.C == "-")
                    Console.WriteLine("结果为：{0}", t.jian(t.A, t.B));
                if (t.C == "*")
                    Console.WriteLine("结果为：{0}", t.cheng(t.A, t.B));
                if (t.C == "/")
                {
                    if (t.B == 0)
                    Console.WriteLine("除数不能为0！");
                    else
                    Console.WriteLine("结果为：{0}", t.chu(t.A, t.B));
                }
                zifu ch = new zifu();
                Console.WriteLine("请分别输入两个字符串");
                string a = Convert.ToString(Console.ReadLine());
                string b = Convert.ToString(Console.ReadLine());
                Console.WriteLine("{0}+{1}={2}", a, b, ch.Addition(a, b));
                Console.WriteLine("{0}-{1}={2}", a, b, ch.Subtraction(a, b));
                Console.WriteLine("请分别输入两个整数");
                int num3 = Convert.ToInt16(Console.ReadLine());
                int num4 = Convert.ToInt16(Console.ReadLine());
                Console.WriteLine("{0}&{1}={2}", num3, num4, t.And(num3, num4));
          }
      }
     abstract class Calculate     //抽象类
    {
        public abstract int jia(int a, int b);

        public abstract int jian(int a, int b);

        public abstract int cheng(int a, int b);     //抽象方法声明

        public abstract int chu(int a, int b);

        public abstract bool Equals(double a, double b);

        public abstract double Surplus(double a, double b);

        public abstract int And(int a, int b);
    } 
    class yunsuan:Calculate
    {
        
            int a;
            int b;
            string c;
            public int A
            {
                get { return a; }
                set { a = value; }
            }
            public string C
            {
                get { return c; }
                set { c = value; }
            }
            public int B
            {
                get { return b; }
                set { b = value; }
            }
            public override int jia(int a, int b)
            {
                int c;
                c = a + b;
                return c;
            }
            public override int jian(int a, int b)
            {
                int c;
                c = a - b;
                return c;
            }
            public override int cheng(int a, int b)
            {
                return a * b;
            }
            public override int chu(int a, int b)
            {
                return a / b;
            }
          
            public override bool Equals(double a, double b)
            {
                if (a == b)
                    return true;
                else
                    return false;
            }
            public override double Surplus(double a, double b)
            {
                double c = a % b;
                return c;
            }
            public override int And(int a, int b)
            {
                int c = a & b;
                return c;
            }
        }
          class zifu : yunsuan
        {
            public string Addition(string a, string b)
            {
                string c;
                c = a + b;
                return c;
            }
       
            public string Subtraction(string a, string b)
            {
                int i = a.IndexOf(b);  
                string c = a.Remove(i, b.Length);
                return c;
            }
        }
